name: Release
on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  release:
    name: Release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            path: target/x86_64-pc-windows-gnu/release/calculator.exe
            name: windows-x86_64.zip
          - target: i686-pc-windows-gnu
            path: target/i686-pc-windows-gnu/release/calculator.exe
            name: windows-i686.zip
          - target: x86_64-unknown-linux-gnu
            path: target/x86_64-unknown-linux-gnu/release/calculator
            name: linux-x86_64.tar.gz
          - target: i686-unknown-linux-gnu
            path: target/i686-unknown-linux-gnu/release/calculator
            name: linux-i686.tar.gz
          - target: aarch64-unknown-linux-gnu
            path: target/aarch64-unknown-linux-gnu/release/calculator
            name: linux-aarch64.tar.gz
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Install GCC for Windows x86_64
        if: ${{ matrix.target == 'x86_64-pc-windows-gnu' }}
        run: sudo apt update && sudo apt install gcc-mingw-w64-x86-64
      - name: Install GCC for Windows i686
        if: ${{ matrix.target == 'i686-pc-windows-gnu' }}
        run: sudo apt update && sudo apt install gcc-mingw-w64-i686
      - name: Install GCC for Linux i686
        if: ${{ matrix.target == 'i686-unknown-linux-gnu' }}
        run: sudo apt update && sudo apt install gcc-multilib
      - name: Install GCC for Linux aarch64
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: sudo apt update && sudo apt install gcc-aarch64-linux-gnu
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Create archive for Linux
        if: ${{ contains(matrix.target, 'linux') }}
        run: tar -czf ${{ matrix.name }} -C $(dirname ${{ matrix.path }}) $(basename ${{ matrix.path }})
      - name: Create archive for Windows
        if: ${{ contains(matrix.target, 'windows')}}
        run: zip -j ${{ matrix.name }} ${{ matrix.path }}
      - name: Upload binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.name }}
          tag: ${{ github.ref }}
